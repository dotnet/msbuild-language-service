{
  "license": "Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.",
  "items": {
    "Reference": {
      "description": "Reference to an assembly",
      "includeDescription": "assembly names or filenames",
      "kind": "file-list",
      "metadata": {
        "HintPath": {
          "description": "Relative or absolute path to the assembly",
          "kind": "file-list"
        },
        "Name": "Friendly display name",
        "FusionName": "Fusion name of the assembly",
        "SpecificVersion": {
          "description": "Whether only the version in the fusion name should be referenced",
          "kind": "bool"
        },
        "Aliases": "Aliases for the reference",
        "Private": {
          "description": "Whether the reference should be copied to the output folder",
          "kind": "bool"
        },
        "EmbedInteropTypes": {
          "description": "Whether the types in this reference need to embedded into the target assembly - interop assemblies only",
          "kind": "bool"
        },
        "RequiredTargetFramework": {
          "description": "The minimum required target framework version in order to use this assembly as a reference",
          "kind": "targetframeworkversion"
        }
      }
    },
    "SDKReference": {
      "description": "Reference to a Windows 8.1 extension SDK",
      "includeDescription": "SDK name and version monikers",
      "metadata": {
        "Name": "Friendly display name (optional)"
      }
    },
    "COMReference": {
      "kind": "file-list",
      "description": "Reference to a COM component",
      "includeDescription": "COM component names",
      "metadata": {
        "Name": "Friendly display name (optional)",
        "Guid": {
          "description": "GUID in the form {00000000-0000-0000-0000-000000000000}",
          "kind": "guid"
        },
        "VersionMajor": {
          "description": "Major part of the version number",
          "kind": "int"
        },
        "VersionMinor": {
          "description": "Minor part of the version number",
          "kind": "int"
        },
        "Lcid": {
          "description": "Locale ID",
          "kind": "lcid"
        },
        "WrapperTool": "Wrapper tool, such as tlbimp",
        "Isolated": {
          "description": "Whether it is isolated",
          "kind": "bool"
        },
        "EmbedInteropTypes": {
          "description": "Whether the types in this reference need to embedded into the target assembly - interop assemblies only (optional)",
          "kind": "bool"
        }
      }
    },
    "COMFileReference": {
      "kind": "file-list",
      "metadata": {
        "WrapperTool": ""
      }
    },
    "PackageReference": {
      "description": "Reference to a NuGet package",
      "includeDescription": "NuGet package IDs",
      "kind": "nugetid",
      "metadata": {
        "Version": {
          "description": "The version of the NuGet package dependency",
          "kind": "nugetversion"
        }
      }
    },
    "DotNetCliToolReference": {
      "description": "The CLI tool that the user wants restored in the context of the project",
      "includeDescription": "tool NuGet package IDs",
      "kind": "nugetid",
      "metadata": {
        "Version": {
          "description": "The version of the NuGet package dependency",
          "kind": "nugetversion"
        }
      }
    },
    "ProjectConfiguration": {
      "description": "Defines a Configuration|Platform combination that may be used to build this project",
      "metadata": {
        "Configuration": {
          "description": "The configuration part of the project configuration",
          "kind": "configuration",
          "required": true
        },
        "Platform": {
          "description": "The platform part of the project configuration",
          "kind": "platform",
          "required": true
        }
      }
    },
    "ProjectCapability": {
      "description": "Project Capability that may activate design-time components in an IDE",
      "includeDescription": "capability IDs"
    },
    "NativeReference": {
      "description": "Reference to a native manifest file, or to a file that contains a native manifest",
      "includeDescription": "reference names",
      "kind": "file-list",
      "metadata": {
        "Name": "Base name of manifest file",
        "HintPath": "Relative path to manifest file"
      }
    },
    "ProjectReference": {
      "description": "Reference to another project",
      "includeDescription": "project file paths",
      "kind": "file-list",
      "metadata": {
        "Name": "Friendly display name",
        "Project": {
          "description": "Project GUID, in the form {00000000-0000-0000-0000-000000000000}",
          "kind": "guid"
        },
        "ReferenceOutputAssembly": {
          "description": "Whether the outputs of the project referenced should be passed to the compiler",
          "kind": "bool",
          "default": "true"
        },
        "SpecificVersion": {
          "description": "Whether the exact version of the assembly should be used",
          "kind": "bool",
          "default": "true"
        },
        "Targets": {
          "description": "Semicolon separated list of targets in the referenced projects that should be built. Default is the value of $(ProjectReferenceBuildTargets) whose default is blank, indicating the default targets.",
          "kind": "targetname-list"
        },
        "OutputItemType": {
          "description": "Item type to emit target outputs into. Default is blank. If the Reference metadata is set to `true` (default) then target outputs will become references for the compiler.",
          "kind": "itemname"
        },
        "Package": "",
        "EmbedInteropTypes": {
          "kind": "bool"
        }
      }
    },
    "Compile": {
      "description": "Source files to be passed to the compiler",
      "includeDescription": "source files",
      "kind": "file-list",
      "metadata": {
        "AutoGen": {
          "description": "Whether file was generated from another file",
          "kind": "bool"
        },
        "DesignTime": "",
        "DesignTimeSharedInput": "",
        "VBMyExtensionTemplateID": ""
      }
    },
    "EmbeddedResource": {
      "description": "Resources to be embedded in the generated assembly",
      "includeDescription": "resource files",
      "kind": "file-list",
      "metadata": {
        "LogicalName": "Overrides the default resource ID"
      }
    },
    "Content": {
      "description": "Files that are not compiled, but may be embedded or published",
      "includeDescription": "content files",
      "kind": "file-list",
      "metadata": {
        "CopyToPublishDirectory": {
          "description": "Whether to copy the file to the publish directory",
          "values": {
            "Never": "Do not copy the file",
            "Always": "Always copy the file",
            "PreservNewest": "Copy the file if it is newer than the existing copy"
          },
          "default": "Never"
        },
        "IsAssembly": "",
        "PublishState": {
          "kind": "enum-publishstate",
          "default": "Default"
        }
      }
    },
    "Page": {
      "description": "XAML files that are converted to binary and compiled into the assembly",
      "includeDescription": "XAML files",
      "kind": "file-list"
    },
    "Resource": {
      "description": "File that is compiled into the assembly",
      "includeDescription": "resource files",
      "kind": "file-list"
    },
    "ApplicationDefinition": {
      "description": "XAML file that contains the application definition, only one can be defined",
      "includeDescription": "application definition",
      "kind": "file"
    },
    "None": {
      "description": "Files that should have no role in the build process",
      "kind": "file-list"
    },
    "BaseApplicationManifest": {
      "description": "The base application manifest for the build. Contains ClickOnce security information.",
      "kind": "file"
    },
    "Folder": {
      "description": "Folder on disk to display in the IDE",
      "includeDescription": "folders",
      "kind": "folder-list"
    },
    "Import": {
      "description": "Assemblies whose namespaces should be imported by the Visual Basic compiler",
      "kind": "file-list"
    },
    "WebReferences": {
      "description": "Name of Web References folder to display in user interface",
      "kind": "string"
    },
    "WebReferenceUrl": {
      "description": "Represents a reference to a web service",
      "includeDescription": "web service urls",
      "kind": "url",
      "metadata": {
        "UrlBehavior": "",
        "RelPath": "",
        "UpdateFromURL": "",
        "ServiceLocationURL": "",
        "CachedDynamicPropName": "",
        "CachedAppSettingsObjectName": "",
        "CachedSettingsPropName": ""
      }
    },
    "FileAssociation": {
      "kind": "string",
      "metadata": {
        "DefaultIcon": "",
        "Description": "",
        "Progid": ""
      }
    },
    "BootstrapperFile": {
      "kind": "file",
      "metadata": {
        "ProductName": "",
        "Install": ""
      }
    },
    "PublishFile": {
      "kind": "file-list",
      "metadata": {
        "PublishState": {
          "kind": "enum-publishstate",
          "default": "Default"
        },
        "IncludeHash": {
          "kind": "bool"
        },
        "IsAssembly": {
          "kind": "bool"
        }
      }
    },
    "TargetPlatform": {
      "description": "Target platform in the form of \"[Identifier], Version=[Version]\", for example, \"Windows, Version=8.0\""
    },
    "Analyzer": {
      "description": "An assembly containing diagnostic analyzers",
      "includeDescription": "relative or absolute assembly paths",
      "kind": "file-list"
    },
    "FileWrites": {
      "description": "Files to track for incremental clean",
      "kind": "file-list"
    }
  },
  "properties": {
    "VisualStudioVersion": "The version of Visual Studio into which this project is loaded",
    "MinimumVisualStudioVersion": "The minimum version of Visual Studio required to open this project",
    "AdditionalFileItemNames": "",
    "AllowUnsafeBlocks": {
      "description": "Whether to allow unsafe code",
      "kind": "bool"
    },
    "AppConfigForCompiler": "",
    "ApplicationIcon": "",
    "ApplicationRevision": "",
    "ApplicationVersion": {
      "kind": "version"
    },
    "AppDesignerFolder": "Name of folder for Application Designer",
    "AspNetConfiguration": "",
    "AssemblyName": "Name of output assembly",
    "AssemblyOriginatorKeyFile": {
      "description": "The file that contains the key used to sign the assembly",
      "kind": "file"
    },
    "AutoGenerateBindingRedirects": "Indicates whether BindingRedirect elements should be automatically generated for referenced assemblies.",
    "AutorunEnabled": {
      "kind": "bool"
    },
    "BaseAddress": "",
    "BootstrapperComponentsLocation": {
      "values": [ "HomeSite", "Relative", "Absolute" ]
    },
    "BootstrapperComponentsUrl": "",
    "BootstrapperEnabled": {
      "kind": "bool"
    },
    "CheckForOverflowUnderflow": {
      "description": "Whether the compiler should check for integer overflow and underflow",
      "default": "false",
      "kind": "bool"
    },
    "CodePage": "The codepage the compiler should use when reading source files",
    "ConsolePause": {
      "description": "Whether the IDE should keep the console open after executing a console application",
      "kind": "bool"
    },
    "Configuration": {
      "description": "The configuration that is being used to build the project, for example \"Debug\" or \"Release\"",
      "kind": "configuration"
    },
    "ConfigurationName": "",
    "ConfigurationOverrideFile": "",
    "CreateDesktopShortcut": {
      "kind": "bool"
    },
    "CreateWebPageOnPublish": {
      "kind": "bool"
    },
    "CurrentSolutionConfigurationContents": "",
    "DebugSecurityZoneURL": "",
    "DebugSymbols": {
      "description": "Whether to emit debug symbols",
      "kind": "bool",
      "default": "false"
    },
    "DebugType": {
      "description": "What kind of debug information to emit",
      "values": {
        "none": "No debug information",
        "pdbonly": "Emit Windows-only PDB debug symbols",
        "portable": "Emit portable PDB debug symbols",
        "full": "Emit Windows-only PDB debug symbols"
      }
    },
    "DefaultClientScript": "",
    "DefaultHTMLPageLayout": "",
    "DefaultTargetSchema": "",
    "DefineConstants": {
      "description": "Conditional compiler defines",
      "kind": "string-list"
    },
    "DelaySign": {
      "description": "Reserve space for a signature so the assembly can be signed later",
      "kind": "bool"
    },
    "DisallowUrlActivation": {
      "kind": "bool"
    },
    "ConfigurationType": "",
    "DeployDirSuffix": "",
    "DisableFastUpToDateCheck": {
      "description": "Whether Visual Studio should do its own faster up-to-date check before Building, rather than invoke MSBuild to do a possibly more accurate one. You would set this to false if you have a heavily customized build process and builds in Visual Studio are not occurring when they should.",
      "kind": "bool"
    },
    "DocumentationFile": {
      "description": "Filename for the xml documentation file",
      "kind": "string"
    },
    "EnableASPDebugging": "",
    "EnableASPXDebugging": "",
    "EnableSQLServerDebugging": "",
    "EnableSecurityDebugging": "",
    "EnableUnmanagedDebugging": "",
    "ErrorLog": "",
    "ErrorReport": {
      "description": "Reporting behavior for internal compiler errors",
      "values": {
        "prompt": "Open a dialog asking whether you want to report the internal compiler error",
        "queue": "Queue the internal compiler error reports and prompt you later",
        "send": "Automatically report the internal compiler error to Microsoft",
        "none": "Do not report internal compiler error"
      },
      "default": "none"
    },
    "EmbedManifest": "",
    "ErrorReportUrl": "",
    "ExcludeDeploymentUrl": {
      "kind": "bool"
    },
    "ExcludedPermissions": "",
    "FallbackCulture": "",
    "FileAlignment": {
      "description": "Override the boundary on which the compiler aligns sections of the output assembly",
      "values": [ "512", "1024", "2048", "4096", "8192" ]
    },
    "FileUpgradeFlags": "",
    "FormFactorID": "",
    "FrameworkPathOverride": {
      "description": "Overrides the path to the target framework"
    },
    "GenerateManifests": "",
    "GenerateLibraryLayout": {
      "kind": "bool"
    },
    "GeneratePackageOnBuild": {
      "description": "Value indicating whether a NuGet package will be generated when the project is built",
      "kind": "bool"
    },
    "DisableXbfGeneration": {
      "kind": "bool"
    },
    "SuppressXamlWarnings": "",
    "XamlRootsLog": "",
    "XamlSavedStateFilePath": "",
    "GenerateSerializationAssemblies": "",
    "HostInBrowser": {
      "kind": "bool"
    },
    "IgnoreImportLibrary": {
      "kind": "bool"
    },
    "Install": "",
    "InstallFrom": {
      "values": [ "Web", "Unc", "Disk" ]
    },
    "InstallUrl": "",
    "IsCodeSharingProject": {
      "kind": "bool"
    },
    "IsWebBootstrapper": "",
    "Keyword": "",
    "Prefer32Bit": {
      "description": "Mark the executable as preferring to run on a 32-bit runtime when on a 64-bit OS",
      "kind": "bool",
      "default": "false"
    },
    "HighEntropyVA": {
      "description": "Mark the executable as able to run with Address Space Layout Randomization (ASLR) enable"
    },
    "ManifestCertificateThumbprint": "",
    "ManifestKeyFile": "",
    "MapFileExtensions": "",
    "MinimumRequiredVersion": {
      "kind": "version"
    },
    "NoConfig": "",
    "NoStdLib": {
      "description": "Whether to disable automatic referencing of standard libraries such as mscorlib",
      "kind": "bool",
      "default": "false"
    },
    "NoWarn": "Comma separated list of disabled warnings",
    "OldToolsVersion": "",
    "OutDir": {
      "description": "The output directory",
      "kind": "folder"
    },
    "OpenBrowserOnPublish": {
      "kind": "bool"
    },
    "Optimize": {
      "description": "Whether the compiler should optimize the output",
      "kind": "bool"
    },
    "OSVersion": "",
    "OutputPath": {
      "description": "Path to output folder, with trailing slash",
      "kind": "folderwithslash"
    },
    "OutputType": {
      "description": "The type of output from the compiler, such as an executable or library",
      "values": {
        "Exe": "A console executable",
        "Library": "A library",
        "Module": "A .NET module",
        "WinExe": "A Windows executable"
      }
    },
    "PackageTargetFallback": "Allows packages using alternative monikers to be referenced in this project, which include older (e.g. dnxcore50, dotnet5.x) and Portable Class Library names",
    "Platform": {
      "description": "The platform that is being used to build the project, for example \"AnyCPU\" or \"x86\"",
      "kind": "platform"
    },
    "PlatformName": "",
    "PlatformFamilyName": "",
    "PlatformID": "",
    "PlatformTarget": {
      "description": "The platform that the executable targets",
      "values": {
        "anycpu": "Runs on a 64-bit runtime if available, else 32-bit",
        "anycpu32bitpreferred": "Runs on a 32-bit runtime if available, else 64-bit",
        "ARM": "Only runs on ARM processors",
        "x64": "Only runs on a 64-bit runtime on x86 processors",
        "x86": "Only runs on a 32-bit runtime on x86 processors",
        "Itanium": "Only runs on Itanium processors"
      },
      "default": "anycpu"
    },
    "PlatformToolset": "",
    "PostBuildEvent": "Command line to be run at the end of build",
    "PreBuildEvent": "Command line to be run at the start of build",
    "PreserveCompilationContext": {
      "description": "Value indicating whether reference assemblies can be used in dynamic compilation",
      "kind": "bool"
    },
    "ProductName": "",
    "ProductVersion": "",
    "ProjectGuid": {
      "description": "A GUID that uniquely identifies the project within the solution",
      "kind": "guid"
    },
    "ProjectType": "",
    "ProjectTypeGuids": {
      "description": "A list of GUIDs that activate design-time capabilities in an IDE",
      "kind": "projectkindguid-list-const"
    },
    "PublisherName": "",
    "PublishUrl": "",
    "RecursePath": "",
    "ReferencePath": {
      "description": "Semi-colon separated list of folders to search during reference resolution",
      "kind": "folder-list"
    },
    "RegisterForComInterop": "",
    "RemoteDebugEnabled": "",
    "RemoteDebugMachine": "",
    "RemoveIntegerChecks": "",
    "ReportAnalyzer": "",
    "RepositoryType": "The type of the repository where the project is stored (e.g. git)",
    "RepositoryUrl": {
      "description": "The URL for the repository where the project is stored",
      "kind": "url"
    },
    "ResponseFile": "",
    "RootNamespace": "The root namespace to use for new files",
    "RuntimeIdentifier": {
      "description": "Runtime identifier supported by the project (e.g. win10-x64)",
      "kind": "runtimeid"
    },
    "RuntimeIdentifiers": {
      "description": "Semi-colon separated list of runtime identifiers supported by the project (e.g. win10-x64;osx.10.11-x64;ubuntu.16.04-x64)",
      "kind": "runtimeid-list"
    },
    "SccProjectName": "",
    "SccLocalPath": "",
    "SccProvider": "",
    "RunCodeAnalysis": {
      "description": "Indicates whether to run Code Analysis during the build",
      "kind": "bool"
    },
    "RunPostBuildEvent": "",
    "SchemaVersion": "",
    "SecureScoping": "",
    "SignAssembly": {
      "description": "Whether to sign the assembly",
      "kind": "bool"
    },
    "SignManifests": "",
    "StartAction": "",
    "StartArguments": "",
    "StartPage": "",
    "StartProgram": "",
    "StartURL": "",
    "StartWithIE": "",
    "StartWorkingDirectory": "",
    "StartupObject": "Type that contains the main entry point",
    "SuiteName": "",
    "SupportUrl": "",
    "TargetCulture": "",
    "TargetFramework": {
      "description": "Short moniker of the framework that this project targets, e.g. `netstandard2.0`",
      "kind": "targetframework"
    },
    "TargetFrameworks": {
      "description": "List of short monikers for the frameworks that this project targets, for example `netstandard2.0;net461)`",
      "kind": "targetframework-list"
    },
    "TargetFrameworkIdentifier": {
      "description": "The identity of framework that this project targets, for example `.NETFramework`",
      "kind": "targetframeworkidentifier"
    },
    "TargetFrameworkVersion": {
      "description": "The version of the framework that this project targets, for example `v4.0`",
      "kind": "targetframeworkversion"
    },
    "TargetFrameworkProfile": {
      "description": "The profile of the framework that this project targets, for example `Profile259`",
      "kind": "targetframeworkprofile"
    },
    "TargetFrameworkMoniker": {
      "description": "The full moniker for of the framework that this project targets, combining the identifier, version and profile",
      "kind": "targetframeworkmoniker"
    },
    "TargetPlatformIdentifier": "",
    "TargetPlatformVersion": "",
    "TargetZone": "",
    "TreatWarningsAsErrors": {
      "description": "Whether to treat warnings as errors",
      "kind": "bool"
    },
    "TrustUrlParameters": "",
    "TypeComplianceDiagnostics": "",
    "UICulture": {
      "kind": "lcid"
    },
    "UpgradeBackupLocation": "",
    "UpdateEnabled": {
      "kind": "bool"
    },
    "UpdateInterval": {
      "kind": "int"
    },
    "UpdateIntervalUnits": {
      "values": [
        "Hours",
        "Days",
        "Weeks"
      ]
    },
    "UpdateMode": {
      "values": [
        "Foreground",
        "Background"
      ]
    },
    "UpdatePeriodically": {
      "kind": "bool"
    },
    "UpdateRequired": {
      "kind": "bool"
    },
    "UpdateUrl": {
      "kind": "url"
    },
    "UseAppConfigForCompiler": {
      "kind": "bool"
    },
    "UseApplicationTrust": "",
    "UseVSHostingProcess": "",
    "UTF8Output": {
      "description": "Whether the compile should use UTF8 encoding for its console output",
      "kind": "bool"
    },
    "VSTO_TrustAssembliesLocation": "",
    "WarningLevel": {
      "description": "What level of warnings the compiler should emit, between 0 and 4 inclusive",
      "kind": "int"
    },
    "WarningsAsErrors": "Comma separated list of warning numbers to treat as errors",
    "WebPage": "",
    "Win32ResourceFile": "A Win32 resource file to embed into the compiler output",
    "Win32Manifest": "A Win32 resource file to embed into the compiler output",
    "TargetPath": {
      "description": "Absolute path of the project's primary output",
      "kind": "file"
    },
    "TargetName": {
      "description": "Base name of the project's primary output",
      "kind": "string"
    },
    "TargetExt": {
      "description": "File extension of the project's primary output",
      "kind": "extension"
    },
    "TargetDir": {
      "description": "Directory path of the project's primary output",
      "kind": "folderwithslash"
    },
    "ProjectDir": {
      "description": "Directory containing the root project",
      "kind": "folderwithslash"
    },
    "ProjectFileName": {
      "description": "Name of the project, formed by appending the extension to the base name",
      "kind": "string"
    },
    "ProjectExt": {
      "description": "File extension of the project",
      "kind": "extension"
    },
    "ProjectName": {
      "description": "Base name of the project",
      "kind": "string"
    },
    "ProjectPath": {
      "description": "Absolute path of the project",
      "kind": "file"
    },
    "SolutionDir": {
      "description": "The directory containing the solution file",
      "kind": "folderwithslash"
    },
    "SolutionName": {
      "description": "Base name of the solution file, without its extension",
      "kind": "string"
    },
    "SolutionExt": {
      "description": "The extension of the solution file",
      "kind": "string"
    },
    "SolutionFileName": {
      "description": "Name of the solution file, formed by appending the extension to the base name",
      "kind": "string"
    },
    "SolutionPath": {
      "description": "Absolute path of the solution file",
      "kind": "file"
    },
    "DefaultLanguageSourceExtension": {
      "description": "The default extension for source files",
      "kind": "extension"
    },
    "BaseOutputPath": {
      "description": "The base directory for build outputs. The build outputs will be in a configuration-specific subdirectory.",
      "kind": "folder"
    },
    "BaseIntermediateOutputPath": {
      "description": "The base directory for intermediate build outputs. The build output will be in a configuration-specific subdirectory.",
      "kind": "folder"
    },
    "IntermediateOutputPath": {
      "description": "The configuration-specific directory in which intermediate build outputs are stored",
      "kind": "folder"
    },
    "MSBuildAllProjects": {
      "description": "List of all project files. Targets can use this as an input to trigger rebuilds when these files change, and targets and props files can add themselves to be included in this behavior.",
      "kind": "file-list"
    },
    "ExternalConsole": {
      "description": "Whether to close the external console after running a console application in the IDE",
      "kind": "bool"
    },
    "Configurations": {
      "description": "The values that the IDE should list for the `Configuration` property",
      "kind": "configuration-list"
    },
    "Platforms": {
      "description": "The values that the IDE should list for the `Platform` property",
      "kind": "platform-list"
    }
  },
  "metadata": [
    {
      "#": "Metadata that controls how assets are consumed/propagated from a reference",
      "$appliesTo": [ "PackageReference", "ProjectReference", "DotNetCliToolReference" ],
      "IncludeAssets": {
        "description": "Assets that will be consumed by the project",
        "default": "all",
        "kind": "enum-asset-list",
        "valueSeparators": ","
      },
      "ExcludeAssets": {
        "description": "Assets that will not be consumed by the project",
        "default": "none",
        "kind": "enum-asset-list",
        "valueSeparators": ","
      },
      "PrivateAssets": {
        "description": "Assets that will be consumed by the project but won't flow to its parent",
        "default": "contentfiles,analyzers,build",
        "kind": "enum-asset-list",
        "valueSeparators": ","
      }
    },
    {
      "#": "Metadata that applies to files that are generated by tools",
      "$appliesTo": [ "ApplicationDefinition", "None", "EmbeddedResource", "Content", "Page", "Resource" ],
      "Generator": "Name of any file generator that is run on this item",
      "LastGenOutput": "File that was created by any file generator that was run on this item",
      "CustomToolNamespace": "Namespace into which any file generator that is run on this item should create code"
    },
    {
      "#": "This technically applies to everything declared outside of a target",
      "$appliesTo": [ "Compile", "EmbeddedResource", "Content", "Page", "Resource", "ApplicationDefinition", "None", "BootstrapperFile", "PublishFile", "FileAssociation" ],
      "Visible": {
        "description": "Whether the item should be displayed in the IDE solution tree",
        "kind": "bool",
        "default": "true"
      }
    },
    {
      "$appliesTo": [ "Compile", "EmbeddedResource", "Content", "Page", "Resource", "ApplicationDefinition", "None" ],
      "CopyToOutputDirectory": {
        "description": "Whether to copy the file to the output directory",
        "values": {
          "Never": "Do not copy the file",
          "Always": "Always copy the file",
          "PreserveNewest": "Copy the file if it is newer than the existing copy"
        },
        "default": "Never"
      }
    },
    {
      "#": "No idea what this is",
      "$appliesTo": [ "Compile", "EmbeddedResource", "Content", "Page", "Resource", "ApplicationDefinition", "None" ],
      "SubType": ""
    },
    {
      "#": "Some XAML thing maybe?",
      "$appliesTo": [ "Content", "Page", "Resource", "ApplicationDefinition", "PublishFile" ],
      "Group": ""
    },
    {
      "$appliesTo": [ "Compile", "EmbeddedResource", "Content", "Page", "Resource", "ApplicationDefinition", "None" ],
      "DependentUpon": "The file under which this file should be grouped in the IDE solution tree"
    },
    {
      "#": "This technically applies to everything declared outside of a target",
      "$appliesTo": [ "Compile", "EmbeddedResource", "Content", "Page", "Resource", "ApplicationDefinition", "None" ],
      "Link": "Notional path within project to display if the file is physically located outside of the project file's cone (optional)"
    }
  ],
  "enumKinds": {
    "asset": {
      "compile": "Libraries from the `lib` folder",
      "runtime": "Contents of the `runtime` folder",
      "contentFiles": "All of the assets",
      "build": "MSBuild targets",
      "analyzers": "Code analyzers",
      "native": "Contents of the `native` folder",
      "none": "None of the assets",
      "all": "All of the assets"
    },
    "publishstate": {
      "Default": "",
      "Included": "",
      "Excluded": "",
      "DataFile": "",
      "Prerequisite": ""
    }
  },
  "targets": {
    "Build": "Builds the project",
    "Cleans": "Deletes the project's intermediate and final outputs",
    "Rebuild": "Cleans and then rebuilds the project",
    "Restore": "Restores NuGet packages required to build the project",
    "Publish": "Prepares the project's outputs for distribution and copies them to the publish folder",
    "ResolveReferences": "Resolves the assembly and project references",
    "ResolveAssemblyReferences": "Resolves assembly references to assemblies and satellite files",
    "ResolveProjectReferences": "Builds referenced projects and resolves their outputs",
    "AssignLinkMetadata": "Assigns default values for the `Link` metadata on several item types",
    "AssignProjectConfiguration": "Assigns configurations to project references based on the solutiom configuration mappings",
    "GetTargetPath": "Called by a referencing project to determine the path to the project's output",
    "PrepareResources": "Prepares resources for the Compile step",
    "AssignTargetPaths": "Assigns `TargetPath` metadata on several item types",
    "ResGen": "Compiles resx resource files",
    "Compile": "Resolves references and compiles the assembly",
    "CoreCompile": "Invokes the compiler to compile the assembly",
    "GenerateTargetFrameworkMonikerAttribute": "Injects a source file containing the TargetFrameworkMonikerAttribute",
    "CreateSatelliteAssemblies": "Creates satellite assemblies for the cultures in the resources",
    "ComputeIntermediateSatelliteAssemblies": "Determines the paths for the satellite assemblies to be created",
    "PrepareForRun": "Copies updated build outputs to the output directory",
    "CopyFilesToOutputDirectory": "Copies updated assemblies and other outputs to the output directory",
    "GetCopyToOutputDirectoryItems": "Gets items to be copied to the output directory from this project and its immediate references",
    "GetCopyToPublishDirectoryItems": "Gets items to be copied to the publish directory from this project and its immediate references",
    "IncrementalClean": "Deletes any files produced by a prior build that are not in the FileWrites items for the current build",
    "CleanReferencedProjects": "Call the Clean target on referenced projects",
    "CleanPublishFolder": "Delete the contents of the publish folder",

    "BeforeCompile": "Runs before the Compile target. Can be safely overridden in project files.",
    "AfterCompile": "Runs after the Compile target. Can be safely overridden in project files.",
    "BeforeBuild": "Runs before the Build target. Can be safely overridden in project files.",
    "AfterBuild": "Runs after the Build target. Can be safely overridden in project files.",
    "BeforeRebuild": "Runs before the Rebuild target. Can be safely overridden in project files.",
    "AfterRebuild": "Runs after the Rebuild target. Can be safely overridden in project files.",
    "BeforeClean": "Runs before the Clean target. Can be safely overridden in project files.",
    "AfterClean": "Runs after the Clean target. Can be safely overridden in project files.",
    "BeforePublish": "Runs before the Publish target. Can be safely overridden in project files.",
    "AfterPublish": "Runs after the Publish target. Can be safely overridden in project files.",
    "BeforeResolveReferences": "Runs before the ResolveReferences target. Can be safely overridden in project files.",
    "AfterResolveReferences": "after before the ResolveReferences target. Can be safely overridden in project files.",
    "BeforeResGen": "Runs before the ResGen target. Can be safely overridden in project files.",
    "AfterResGen": "Runs after the ResGen target. Can be safely overridden in project files."
  }
}
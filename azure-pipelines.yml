variables:
  - name: Build.Repository.Clean
    value: true
  - name: _TeamName
    value: DotNet-Project-System

trigger:
  - main
  - release/*

pr:
  - main

jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enableMicrobuild: true
      enablePublishBuildArtifacts: true
      enableTelemetry: true
      helixRepo: dotnet/msbuild-language-service
      jobs:
        - job: Windows
          pool:
            # agent pool can't be read from a user-defined variable (Azure DevOps limitation)
            ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
              name: NetCorePublic-Pool
              queue: buildpool.windows.10.amd64.vs2019.pre.open
            ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
              name: NetCoreInternal-Pool
              queue: buildpool.windows.10.amd64.vs2019.pre
          strategy:
            matrix:
              debug:
                _BuildConfig: Debug
              release:
                _BuildConfig: Release
          variables:
            - _BuildArgs: ''
            - _OfficialBuildIdArgs: ''
          
            # Variables for internal Official builds
            - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
              # TODO: Change when signing set up
              - _SignType: test
              - _BuildArgs: /p:DotNetSignType=$(_SignType)
                  /p:TeamName=$(_TeamName)
                  /p:OfficialBuildId=$(Build.BuildNumber) 
          steps:
            - script: eng\common\cibuild.cmd 
                -configuration $(_BuildConfig)
                -prepareMachine
                $(_BuildArgs)
              name: Build
              displayName: Build
              condition: succeeded()
            # Detect OSS Components in use in the product. Only needs to run on one OS in the matrix.
            - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
              displayName: Detect components
              condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
            - task: PublishBuildArtifacts@1
              displayName: Publish VSIX Artifacts
              inputs:
                PathtoPublish: '$(Build.SourcesDirectory)/artifacts/VSSetup/$(_BuildConfig)'
                PublishLocation: Container
                ArtifactName: VSIX_$(Agent.Os)_$(Agent.JobName)
                continueOnError: true
              condition: eq(variables['_BuildConfig'], 'Release')

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonoDevelop.MSBuild.Schema {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ElementDescriptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ElementDescriptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MonoDevelop.MSBuild.Schema.ElementDescriptions", typeof(ElementDescriptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups When and Otherwise elements.
        /// </summary>
        internal static string Choose {
            get {
                return ResourceManager.GetString("Choose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements.
        /// </summary>
        internal static string Choose_Label {
            get {
                return ResourceManager.GetString("Choose.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declares that the contents of another project file should be inserted at this location.
        /// </summary>
        internal static string Import {
            get {
                return ResourceManager.GetString("Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the import should occur.
        /// </summary>
        internal static string Import_Condition {
            get {
                return ResourceManager.GetString("Import.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements.
        /// </summary>
        internal static string Import_Label {
            get {
                return ResourceManager.GetString("Import.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression used to specify the minimum SDK version required by the referring import.
        /// </summary>
        internal static string Import_MinimumVersion {
            get {
                return ResourceManager.GetString("Import.MinimumVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project file to import.
        /// </summary>
        internal static string Import_Project {
            get {
                return ResourceManager.GetString("Import.Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the SDK which contains the project file to import.
        /// </summary>
        internal static string Import_Sdk {
            get {
                return ResourceManager.GetString("Import.Sdk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression used to specify the version of the SDK referenced by this import.
        /// </summary>
        internal static string Import_Version {
            get {
                return ResourceManager.GetString("Import.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups import definitions.
        /// </summary>
        internal static string ImportGroup {
            get {
                return ResourceManager.GetString("ImportGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the ImportGroup should be used.
        /// </summary>
        internal static string ImportGroup_Condition {
            get {
                return ResourceManager.GetString("ImportGroup.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements.
        /// </summary>
        internal static string ImportGroup_Label {
            get {
                return ResourceManager.GetString("ImportGroup.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates, updates or removes items and their metadata.
        /// </summary>
        internal static string Item {
            get {
                return ResourceManager.GetString("Item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the items should be evaluated.
        /// </summary>
        internal static string Item_Condition {
            get {
                return ResourceManager.GetString("Item.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of files (wildcards are allowed) or other item names to exclude from the Include list.
        /// </summary>
        internal static string Item_Exclude {
            get {
                return ResourceManager.GetString("Item.Exclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of {0} or other item references to exclude from the Include list.
        /// </summary>
        internal static string Item_Exclude_Parameterized {
            get {
                return ResourceManager.GetString("Item.Exclude.Parameterized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of {0} (wildcards are allowed) or other item references to exclude from the Include list.
        /// </summary>
        internal static string Item_Exclude_ParameterizedFiles {
            get {
                return ResourceManager.GetString("Item.Exclude.ParameterizedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A {0} to exclude from the Include list.
        /// </summary>
        internal static string Item_Exclude_ParameterizedSingle {
            get {
                return ResourceManager.GetString("Item.Exclude.ParameterizedSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of files (wildcards are allowed) or other item names to include in this item list.
        /// </summary>
        internal static string Item_Include {
            get {
                return ResourceManager.GetString("Item.Include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of {0} or other item references to include in this item list.
        /// </summary>
        internal static string Item_Include_Parameterized {
            get {
                return ResourceManager.GetString("Item.Include.Parameterized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of {0} (wildcards are allowed) or other item references to include in this item list.
        /// </summary>
        internal static string Item_Include_ParameterizedFiles {
            get {
                return ResourceManager.GetString("Item.Include.ParameterizedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single {0} to include in this item list.
        /// </summary>
        internal static string Item_Include_ParameterizedSingle {
            get {
                return ResourceManager.GetString("Item.Include.ParameterizedSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to add items even if they match the identity and metadata of an existing item.
        /// </summary>
        internal static string Item_KeepDuplicates {
            get {
                return ResourceManager.GetString("Item.KeepDuplicates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata from source items to keep on target items.
        /// </summary>
        internal static string Item_KeepMetadata {
            get {
                return ResourceManager.GetString("Item.KeepMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements.
        /// </summary>
        internal static string Item_Label {
            get {
                return ResourceManager.GetString("Item.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of files (wildcards are allowed) or other item names to remove from the existing list contents.
        /// </summary>
        internal static string Item_Remove {
            get {
                return ResourceManager.GetString("Item.Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of {0} or other item references to remove from the existing list contents.
        /// </summary>
        internal static string Item_Remove_Parameterized {
            get {
                return ResourceManager.GetString("Item.Remove.Parameterized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of {0} (wildcards are allowed) or other item references to remove from the existing list contents.
        /// </summary>
        internal static string Item_Remove_ParameterizedFiles {
            get {
                return ResourceManager.GetString("Item.Remove.ParameterizedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A {0} to remove from the existing list contents.
        /// </summary>
        internal static string Item_Remove_ParameterizedSingle {
            get {
                return ResourceManager.GetString("Item.Remove.ParameterizedSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata from source items to omit from target items.
        /// </summary>
        internal static string Item_RemoveMetadata {
            get {
                return ResourceManager.GetString("Item.RemoveMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of files (wildcards are allowed) or other item names to be updated with the metadata from contained in this xml element.
        /// </summary>
        internal static string Item_Update {
            get {
                return ResourceManager.GetString("Item.Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of {0} or other item references to be updated with the metadata from contained in this xml element.
        /// </summary>
        internal static string Item_Update_Parameterized {
            get {
                return ResourceManager.GetString("Item.Update.Parameterized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of {0} (wildcards are allowed) or other item references to be updated with the metadata from contained in this xml element.
        /// </summary>
        internal static string Item_Update_ParameterizedFiles {
            get {
                return ResourceManager.GetString("Item.Update.ParameterizedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A {0} to be updated with the metadata from contained in this xml element.
        /// </summary>
        internal static string Item_Update_ParameterizedSingle {
            get {
                return ResourceManager.GetString("Item.Update.ParameterizedSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item kind to which to apply metadata.
        /// </summary>
        internal static string ItemDefinition {
            get {
                return ResourceManager.GetString("ItemDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups item metadata definitions.
        /// </summary>
        internal static string ItemDefinitionGroup {
            get {
                return ResourceManager.GetString("ItemDefinitionGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the ItemDefinitionGroup should be used.
        /// </summary>
        internal static string ItemDefinitionGroup_Condition {
            get {
                return ResourceManager.GetString("ItemDefinitionGroup.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements.
        /// </summary>
        internal static string ItemDefinitionGroup_Label {
            get {
                return ResourceManager.GetString("ItemDefinitionGroup.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups item definitions.
        /// </summary>
        internal static string ItemGroup {
            get {
                return ResourceManager.GetString("ItemGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the ItemGroup should be used.
        /// </summary>
        internal static string ItemGroup_Condition {
            get {
                return ResourceManager.GetString("ItemGroup.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements.
        /// </summary>
        internal static string ItemGroup_Label {
            get {
                return ResourceManager.GetString("ItemGroup.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arbitrary key-value pairs on the item.
        /// </summary>
        internal static string Metadata {
            get {
                return ResourceManager.GetString("Metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the metadata should applied to the item.
        /// </summary>
        internal static string Metadata_Condition {
            get {
                return ResourceManager.GetString("Metadata.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies targets to execute in the event of a recoverable error.
        /// </summary>
        internal static string OnError {
            get {
                return ResourceManager.GetString("OnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the targets should be executed.
        /// </summary>
        internal static string OnError_Condition {
            get {
                return ResourceManager.GetString("OnError.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-colon separated list of targets to execute.
        /// </summary>
        internal static string OnError_ExecuteTargets {
            get {
                return ResourceManager.GetString("OnError.ExecuteTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements.
        /// </summary>
        internal static string OnError_Label {
            get {
                return ResourceManager.GetString("OnError.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups PropertyGroup and/or ItemGroup elements that are used if no Conditions on sibling When elements evaluate to true.
        /// </summary>
        internal static string Otherwise {
            get {
                return ResourceManager.GetString("Otherwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional element specifying a specific task output to be gathered.
        /// </summary>
        internal static string Output {
            get {
                return ResourceManager.GetString("Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the output should be gathered.
        /// </summary>
        internal static string Output_Condition {
            get {
                return ResourceManager.GetString("Output.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional name of an item list to put the gathered outputs into. Either ItemName or PropertyName must be specified.
        /// </summary>
        internal static string Output_ItemName {
            get {
                return ResourceManager.GetString("Output.ItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional name of a property to put the gathered output into. Either PropertyName or ItemName must be specified.
        /// </summary>
        internal static string Output_PropertyName {
            get {
                return ResourceManager.GetString("Output.PropertyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task parameter to gather. Matches the name of a .NET Property on the task class that has an [Output] attribute.
        /// </summary>
        internal static string Output_TaskParameter {
            get {
                return ResourceManager.GetString("Output.TaskParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input or output parameter for the task.
        /// </summary>
        internal static string Parameter {
            get {
                return ResourceManager.GetString("Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional bool. Whether this task parameter can be retrieved as an output. Defaults to false..
        /// </summary>
        internal static string Parameter_Output {
            get {
                return ResourceManager.GetString("Parameter.Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional string. Type of the task parameter. Defaults to string type..
        /// </summary>
        internal static string Parameter_ParameterType {
            get {
                return ResourceManager.GetString("Parameter.ParameterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional bool. Whether this task parameter is required to be passed a value. Defaults to false..
        /// </summary>
        internal static string Parameter_Required {
            get {
                return ResourceManager.GetString("Parameter.Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups parameters that are part of an inline task definition.
        /// </summary>
        internal static string ParameterGroup {
            get {
                return ResourceManager.GetString("ParameterGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An MSBuild project..
        /// </summary>
        internal static string Project {
            get {
                return ResourceManager.GetString("Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional semi-colon separated list of one or more targets that will be built if no targets are otherwise specified.
        /// </summary>
        internal static string Project_DefaultTargets {
            get {
                return ResourceManager.GetString("Project.DefaultTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional semi-colon separated list of targets that should always be built before any other targets.
        /// </summary>
        internal static string Project_InitialTargets {
            get {
                return ResourceManager.GetString("Project.InitialTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional string describing the MSBuild SDK(s) this project should be built with.
        /// </summary>
        internal static string Project_Sdk {
            get {
                return ResourceManager.GetString("Project.Sdk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional string describing the toolset version this project should normally be built with.
        /// </summary>
        internal static string Project_ToolsVersion {
            get {
                return ResourceManager.GetString("Project.ToolsVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command-line properties to ignore in this file and its imports..
        /// </summary>
        internal static string Project_TreatAsLocalProperty {
            get {
                return ResourceManager.GetString("Project.TreatAsLocalProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML namespace, must be &quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;..
        /// </summary>
        internal static string Project_xmlns {
            get {
                return ResourceManager.GetString("Project.xmlns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional section used by MSBuild hosts, that may contain arbitrary XML content that is ignored by MSBuild itself..
        /// </summary>
        internal static string ProjectExtensions {
            get {
                return ResourceManager.GetString("ProjectExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets a property value.
        /// </summary>
        internal static string Property {
            get {
                return ResourceManager.GetString("Property", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the property should be evaluated.
        /// </summary>
        internal static string Property_Condition {
            get {
                return ResourceManager.GetString("Property.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements.
        /// </summary>
        internal static string Property_Label {
            get {
                return ResourceManager.GetString("Property.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups property definitions.
        /// </summary>
        internal static string PropertyGroup {
            get {
                return ResourceManager.GetString("PropertyGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the PropertyGroup should be used.
        /// </summary>
        internal static string PropertyGroup_Condition {
            get {
                return ResourceManager.GetString("PropertyGroup.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements.
        /// </summary>
        internal static string PropertyGroup_Label {
            get {
                return ResourceManager.GetString("PropertyGroup.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups tasks into a section of the build process.
        /// </summary>
        internal static string Target {
            get {
                return ResourceManager.GetString("Target", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional semi-colon separated list of targets that this target should run before..
        /// </summary>
        internal static string Target_AfterTargets {
            get {
                return ResourceManager.GetString("Target.AfterTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional semi-colon separated list of targets that this target should run before..
        /// </summary>
        internal static string Target_BeforeTargets {
            get {
                return ResourceManager.GetString("Target.BeforeTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the Target and the targets it depends on should be run.
        /// </summary>
        internal static string Target_Condition {
            get {
                return ResourceManager.GetString("Target.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional semi-colon separated list of targets that should be run before this target.
        /// </summary>
        internal static string Target_DependsOnTargets {
            get {
                return ResourceManager.GetString("Target.DependsOnTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional semi-colon separated list of files that form inputs into this target. Their timestamps will be compared with the timestamps of files in Outputs to determine whether the Target is up to date.
        /// </summary>
        internal static string Target_Inputs {
            get {
                return ResourceManager.GetString("Target.Inputs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether duplicate items in the Target&apos;s Returns should be removed before returning them. The default is not to eliminate duplicates..
        /// </summary>
        internal static string Target_KeepDuplicateOutputs {
            get {
                return ResourceManager.GetString("Target.KeepDuplicateOutputs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression. Used to identify or order system and user elements..
        /// </summary>
        internal static string Target_Label {
            get {
                return ResourceManager.GetString("Target.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the target.
        /// </summary>
        internal static string Target_Name {
            get {
                return ResourceManager.GetString("Target.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional semi-colon separated list of files that form outputs into this target. Their timestamps will be compared with the timestamps of files in Inputs to determine whether the Target is up to date.
        /// </summary>
        internal static string Target_Outputs {
            get {
                return ResourceManager.GetString("Target.Outputs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine which items generated by the target should be returned by the target. If there are no Returns attributes on Targets in the file, the Outputs attributes are used instead for this purpose..
        /// </summary>
        internal static string Target_Returns {
            get {
                return ResourceManager.GetString("Target.Returns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string Task {
            get {
                return ResourceManager.GetString("Task", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the bitness of the task if it must be run specifically in a 32bit or 64bit process. If not specified, it will run with the bitness of the build process.  If there are multiple tasks defined in UsingTask with the same name but with different Architecture attribute values, the value of the Architecture attribute specified here will be used to match and select the correct task.
        /// </summary>
        internal static string Task_Architecture {
            get {
                return ResourceManager.GetString("Task.Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the task should be executed.
        /// </summary>
        internal static string Task_Condition {
            get {
                return ResourceManager.GetString("Task.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional boolean indicating whether a recoverable task error should be ignored. Default false.
        /// </summary>
        internal static string Task_ContinueOnError {
            get {
                return ResourceManager.GetString("Task.ContinueOnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A paramater to pass to the task.
        /// </summary>
        internal static string Task_Parameter {
            get {
                return ResourceManager.GetString("Task.Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the .NET runtime of the task. This must be specified if the task must run on a specific version of the .NET runtime. If not specified, the task will run on the runtime being used by the build process. If there are multiple tasks defined in UsingTask with the same name but with different Runtime attribute values, the value of the Runtime attribute specified here will be used to match and select the correct task.
        /// </summary>
        internal static string Task_Runtime {
            get {
                return ResourceManager.GetString("Task.Runtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data to be passed to the task factory.
        /// </summary>
        internal static string TaskBody {
            get {
                return ResourceManager.GetString("TaskBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the assembly containing a task&apos;s implementation, or contains the implementation itself..
        /// </summary>
        internal static string UsingTask {
            get {
                return ResourceManager.GetString("UsingTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the architecture of the task host that this task should be run in.  Currently supported values:  x86, x64, CurrentArchitecture, and * (any).  If Architecture is not specified, either the task will be run within the MSBuild process, or the task host will be launched using the architecture of the parent MSBuild process.
        /// </summary>
        internal static string UsingTask_Architecture {
            get {
                return ResourceManager.GetString("UsingTask.Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional path to assembly containing the task. Either AssemblyName or AssemblyFile must be used.
        /// </summary>
        internal static string UsingTask_AssemblyFile {
            get {
                return ResourceManager.GetString("UsingTask.AssemblyFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional name of assembly containing the task. Either AssemblyName or AssemblyFile must be used.
        /// </summary>
        internal static string UsingTask_AssemblyName {
            get {
                return ResourceManager.GetString("UsingTask.AssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the declaration should be evaluated.
        /// </summary>
        internal static string UsingTask_Condition {
            get {
                return ResourceManager.GetString("UsingTask.Condition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the .NET runtime version of the task host that this task should be run in.  Currently supported values:  CLR2, CLR4, CurrentRuntime, and * (any).  If Runtime is not specified, either the task will be run within the MSBuild process, or the task host will be launched using the runtime of the parent MSBuild process.
        /// </summary>
        internal static string UsingTask_Runtime {
            get {
                return ResourceManager.GetString("UsingTask.Runtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the task factory class in the assembly.
        /// </summary>
        internal static string UsingTask_TaskFactory {
            get {
                return ResourceManager.GetString("UsingTask.TaskFactory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of task class in the assembly.
        /// </summary>
        internal static string UsingTask_TaskName {
            get {
                return ResourceManager.GetString("UsingTask.TaskName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contains the inline task implementation. Content is opaque to MSBuild..
        /// </summary>
        internal static string UsingTaskBody {
            get {
                return ResourceManager.GetString("UsingTaskBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the body should have properties expanded before use. Defaults to false..
        /// </summary>
        internal static string UsingTaskBody_Evaluate {
            get {
                return ResourceManager.GetString("UsingTaskBody.Evaluate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups PropertyGroup and/or ItemGroup elements.
        /// </summary>
        internal static string When {
            get {
                return ResourceManager.GetString("When", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional expression evaluated to determine whether the child PropertyGroups and/or ItemGroups should be used.
        /// </summary>
        internal static string When_Condition {
            get {
                return ResourceManager.GetString("When.Condition", resourceCulture);
            }
        }
    }
}
